{"version":3,"sources":["storage/reduser.js","storage/localStorage.js","Pagination.js","storage/actions.js","CreateUser.js","EditUser.js","App.js","index.js"],"names":["initState","serializedState","localStorage","getItem","users","JSON","parse","err","console","error","loadState","store","createStore","action","type","data","subscribe","throtle","stringify","setItem","log","saveState","getState","PaginationBlock","styled","div","Pagination","currentPage","setCurrentPage","PageCount","onClick","checkResponse","response","ok","Error","status","statusText","json","handleError","getUsers","dispatch","setLoading","fetch","then","catch","finally","FormStyled","form","CreateUser","useDispatch","useState","userName","setUserName","userSurname","setUserSurname","userDescription","setUserDescription","userData","name","surname","desc","onSubmit","e","preventDefault","method","body","headers","createUser","placeholder","value","onChange","currentTarget","required","EditUser","user","editedUserName","setEditedUserName","editedUserSurname","setEditedUserSurname","editedUserDescription","setEditedUserDescription","isVisibleEditWindow","setIsVisibleEditWindow","confirmDelete","setConfirmDelete","handlerDeleteUser","id","deleteUser","Modal","editUser","defaultValue","Wrapper","UsersWrapper","UserWrapper","App","loading","useEffect","usersData","useSelector","currentUsers","slice","Math","ceil","length","usersPerPage","map","index","key","GlobalStyle","createGlobalStyle","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.c00b09b6.chunk.js","sourcesContent":["import throtle from 'lodash/throttle'\nimport { loadState, saveState } from './localStorage'\nimport { createStore } from 'redux'\n\nconst initState = loadState()\nconst users = (users = initState, action) => {\n    switch (action.type) {\n        case 'add':\n            return {\n                users: action.data,\n            }\n        default:\n            return users\n    }\n}\n\nexport const store = createStore(users)\nstore.subscribe(\n    throtle(() => {\n        saveState({ users: store.getState().users })\n    }, 1000)\n)\n","export const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('users')\n        if (serializedState === null) {\n            return { users: [] }\n        }\n        return JSON.parse(serializedState)\n    } catch (err) {\n        console.error(err)\n        return {}\n    }\n}\n\nexport const saveState = (users) => {\n    try {\n        const serializedState = JSON.stringify(users)\n        localStorage.setItem('users', serializedState)\n    } catch (err) {\n        // eslint-disable-next-line no-console\n        console.log(err)\n    }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst PaginationBlock = styled.div`\n    display: flex;\n    justify-content: center;\n    div {\n        display: flex;\n        width: 100px;\n        justify-content: space-around;\n        align-items: center;\n    }\n    button {\n        height: 30px;\n        border-radius: 100%;\n        line-height: 14px;\n    }\n`\nexport const Pagination = ({ currentPage, setCurrentPage, PageCount }) => {\n    const nextPage = () => {\n        if (currentPage === PageCount) {\n            return setCurrentPage(1)\n        }\n        return setCurrentPage(currentPage + 1)\n    }\n    const prevPage = () => {\n        if (currentPage === 1) {\n            setCurrentPage(PageCount)\n        } else {\n            setCurrentPage(currentPage - 1)\n        }\n    }\n\n    return (\n        <>\n            {PageCount > 1 && (\n                <PaginationBlock>\n                    <div>\n                        <button onClick={prevPage}> &larr;</button>\n                        <span>\n                            {currentPage}/{PageCount}\n                        </span>\n                        <button onClick={nextPage}> &rarr;</button>\n                    </div>\n                </PaginationBlock>\n            )}\n        </>\n    )\n}\n","const checkResponse = (response) => {\n    if (!response.ok) {\n        throw new Error(`${response.status}: ${response.statusText}`)\n    }\n    return response.json()\n}\n\nconst handleError = (err) => {\n    console.error(err)\n}\n\nexport const getUsers = (dispatch, setLoading) => {\n    return fetch(\n        `https://cors-anywhere.herokuapp.com/http://77.120.241.80:8911/api/users`\n    )\n        .then(checkResponse)\n        .then((data) => {\n            dispatch({ type: 'add', data: data })\n        })\n        .catch(handleError)\n        .finally(setLoading(false))\n}\n\nexport const deleteUser = (id, dispatch, setLoading) => {\n    setLoading(true)\n    return fetch(\n        `https://cors-anywhere.herokuapp.com/http://77.120.241.80:8911/api/user/${id}`,\n        {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n    )\n        .then(checkResponse)\n        .then(() => {\n            getUsers(dispatch, setLoading)\n        })\n        .catch(handleError)\n}\nexport const editUser = (\n    id,\n    userData,\n    setIsVisibleEditWindow,\n    dispatch,\n    setLoading\n) => {\n    setIsVisibleEditWindow(false)\n    setLoading(true)\n    return fetch(\n        `https://cors-anywhere.herokuapp.com/http://77.120.241.80:8911/api/user/${id}`,\n        {\n            method: 'PUT',\n            body: JSON.stringify(userData),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n    )\n        .then(checkResponse)\n        .then(() => {\n            getUsers(dispatch, setLoading)\n        })\n        .catch(handleError)\n}\nexport const createUser = (data, dispatch, setLoading) => {\n    setLoading(true)\n    return fetch(\n        `https://cors-anywhere.herokuapp.com/http://77.120.241.80:8911/api/users`,\n        {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n    )\n        .then(checkResponse)\n        .then(() => {\n            getUsers(dispatch, setLoading)\n        })\n        .catch(handleError)\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useDispatch } from 'react-redux'\n\nimport { createUser } from './storage/actions'\n\nexport const FormStyled = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex-grow: 0;\n    justify-content: center;\n    border: 1px solid black;\n    border-radius: 15px;\n    margin: 10px;\n    padding: 10px;\n    background-color: lightgray;\n    input,\n    button {\n        margin: 10px;\n        padding: 5px 10px;\n        font-weight: bold;\n        border-radius: 10px;\n        outline: none;\n    }\n    @media (min-width: 860px) {\n        flex-direction: row;\n    }\n`\nexport const CreateUser = ({ setLoading }) => {\n    const dispatch = useDispatch()\n    const [userName, setUserName] = useState('')\n    const [userSurname, setUserSurname] = useState('')\n    const [userDescription, setUserDescription] = useState('')\n\n    const handleUserNameChange = (e) => {\n        setUserName(e.currentTarget.value)\n    }\n    const handleUserSurname = (e) => {\n        setUserSurname(e.currentTarget.value)\n    }\n    const handleUserDescription = (e) => {\n        setUserDescription(e.currentTarget.value)\n    }\n    const userData = {\n        name: userName,\n        surname: userSurname,\n        desc: userDescription,\n    }\n    const clearInputs = () => {\n        setUserName('')\n        setUserSurname('')\n        setUserDescription('')\n    }\n    const handleCreateUser = (e) => {\n        e.preventDefault()\n        clearInputs()\n        createUser(userData, dispatch, setLoading)\n    }\n\n    return (\n        <FormStyled onSubmit={handleCreateUser}>\n            <h3>Create user</h3>\n            <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"input name\"\n                value={userName}\n                onChange={handleUserNameChange}\n                required\n            />\n            <input\n                type=\"text\"\n                name=\"surname\"\n                placeholder=\"input surname\"\n                value={userSurname}\n                onChange={handleUserSurname}\n                required\n            />\n            <input\n                type=\"text\"\n                name=\"desc\"\n                placeholder=\"input description\"\n                value={userDescription}\n                onChange={handleUserDescription}\n                required\n            />\n            <button type=\"submit\">Create user</button>\n        </FormStyled>\n    )\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { deleteUser, editUser } from './storage/actions'\nimport { FormStyled } from './CreateUser'\nimport { Modal } from './App'\nexport const EditUser = ({ user, setLoading }) => {\n    const dispatch = useDispatch()\n    const [editedUserName, setEditedUserName] = useState('')\n    const [editedUserSurname, setEditedUserSurname] = useState('')\n    const [editedUserDescription, setEditedUserDescription] = useState('')\n    const [isVisibleEditWindow, setIsVisibleEditWindow] = useState(false)\n    const [confirmDelete, setConfirmDelete] = useState(false)\n    const handleEditUserNameChange = (e) => {\n        setEditedUserName(e.currentTarget.value)\n    }\n    const handleEditUserSurname = (e) => {\n        setEditedUserSurname(e.currentTarget.value)\n    }\n    const handleEditUserDescription = (e) => {\n        setEditedUserDescription(e.currentTarget.value)\n    }\n    const userData = {\n        name: editedUserName,\n        surname: editedUserSurname,\n        desc: editedUserDescription,\n    }\n    const handlerDeleteUser = () => deleteUser(user.id, dispatch, setLoading)\n\n    const handlerEditUser = (e) => {\n        e.preventDefault()\n        editUser(\n            user.id,\n            userData,\n            setIsVisibleEditWindow,\n            dispatch,\n            setLoading\n        )\n    }\n\n    return (\n        <>\n            {confirmDelete && (\n                <Modal>\n                    <span>Delete?</span>\n                    <button\n                        onClick={() => {\n                            handlerDeleteUser()\n                            setConfirmDelete(false)\n                        }}\n                    >\n                        Ok\n                    </button>\n                    <button\n                        onClick={() => {\n                            setConfirmDelete(false)\n                        }}\n                    >\n                        No\n                    </button>\n                </Modal>\n            )}\n            {!isVisibleEditWindow && (\n                <>\n                    <button onClick={() => setConfirmDelete(true)}>\n                        Delete user\n                    </button>\n                    <button\n                        onClick={() => {\n                            setEditedUserName(user.name)\n                            setEditedUserSurname(user.surname)\n                            setEditedUserDescription(user.desc)\n                            setIsVisibleEditWindow(true)\n                        }}\n                    >\n                        Edit user\n                    </button>\n                </>\n            )}\n\n            {isVisibleEditWindow && (\n                <Modal>\n                    <FormStyled onSubmit={handlerEditUser}>\n                        <h3>Edit user</h3>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            placeholder=\"input name\"\n                            defaultValue={editedUserName}\n                            onChange={handleEditUserNameChange}\n                            required\n                        />\n                        <input\n                            type=\"text\"\n                            name=\"surname\"\n                            placeholder=\"input surname\"\n                            defaultValue={editedUserSurname}\n                            onChange={handleEditUserSurname}\n                            required\n                        />\n                        <input\n                            type=\"text\"\n                            name=\"desc\"\n                            placeholder=\"input desc\"\n                            defaultValue={editedUserDescription}\n                            onChange={handleEditUserDescription}\n                            required\n                        />\n                        <button type=\"submit\">Edit user</button>\n                        {isVisibleEditWindow && (\n                            <button\n                                onClick={() => setIsVisibleEditWindow(false)}\n                            >\n                                Cancel edit\n                            </button>\n                        )}\n                    </FormStyled>\n                </Modal>\n            )}\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { Pagination } from './Pagination'\nimport { CreateUser } from './CreateUser'\nimport { EditUser } from './EditUser'\nimport { getUsers } from './storage/actions'\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst Wrapper = styled.div`\n    position: relative;\n    width: 100vw;\n    min-height: 100vh;\n`\nexport const Modal = styled.div`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0, 0, 0, 0.85);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    span {\n        font-size: 32px;\n        color: #fff;\n    }\n`\nconst UsersWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n`\n\nconst UserWrapper = styled.div`\n    border: 1px solid black;\n    border-radius: 15px;\n    margin: 10px;\n    padding: 10px;\n    button,\n    p,\n    span {\n        margin: 10px;\n        padding: 5px 10px;\n        border-radius: 10px;\n        outline: none;\n    }\n`\n\nconst App = () => {\n    const dispatch = useDispatch()\n\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        getUsers(dispatch, setLoading)\n    }, [dispatch])\n\n    const usersData = useSelector((users) => users.users)\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const usersPerPage = 5\n\n    const currentUsers =\n        usersData &&\n        usersData.slice(\n            (currentPage - 1) * usersPerPage,\n            currentPage * usersPerPage\n        )\n    const PageCount = usersData ? Math.ceil(usersData.length / usersPerPage) : 1\n    if (PageCount < currentPage) {\n        setCurrentPage(PageCount)\n    }\n    return (\n        <Wrapper>\n            {loading && (\n                <Modal>\n                    <span>Loading...</span>\n                </Modal>\n            )}\n            <CreateUser setLoading={setLoading} />\n            <Pagination\n                currentPage={currentPage}\n                setCurrentPage={setCurrentPage}\n                usersPerPage={usersPerPage}\n                PageCount={PageCount}\n            />\n            <UsersWrapper>\n                {currentUsers &&\n                    currentUsers.map((user, index) => {\n                        return (\n                            <UserWrapper key={index}>\n                                <p>Name: {user.name}</p>\n                                <p>Surname: {user.surname}</p>\n\n                                <p>Description: {user.desc}</p>\n\n                                <EditUser setLoading={setLoading} user={user} />\n                            </UserWrapper>\n                        )\n                    })}\n            </UsersWrapper>\n        </Wrapper>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './storage/reduser'\nimport { createGlobalStyle } from 'styled-components'\nimport App from './App'\n\nconst GlobalStyle = createGlobalStyle`\n  html,body {\n    margin:0\n  }\n  button{\n      :hover{\n          background-color: lightblue;\n          cursor: pointer;\n          }\n        :focus{\n            border-color: lightcoral;\n            outline:none;\n        }\n  }\n`\n\nReactDOM.render(\n    <React.Fragment>\n        <GlobalStyle />\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.Fragment>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}