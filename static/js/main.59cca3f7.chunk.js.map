{"version":3,"sources":["storage/reduser.js","storage/localStorage.js","Pagination.js","storage/actions.js","CreateUser.js","Modal.js","EditUser.js","App.js","index.js"],"names":["initState","serializedState","localStorage","getItem","users","JSON","parse","err","console","error","loadState","store","createStore","action","type","data","applyMiddleware","ReduxThunk","subscribe","throtle","stringify","setItem","log","saveState","getState","PaginationBlock","styled","div","Pagination","currentPage","setCurrentPage","PageCount","onClick","checkResponse","response","ok","Error","status","statusText","json","handleError","getUsers","setLoading","dispatch","fetch","then","catch","finally","FormStyled","form","CreateUser","useDispatch","useState","userName","setUserName","userSurname","setUserSurname","userDescription","setUserDescription","userData","name","surname","desc","onSubmit","e","preventDefault","method","body","headers","createUser","placeholder","value","onChange","currentTarget","required","Wrapper","Modal","children","props","ModalStyled","EditUser","user","editedUserName","setEditedUserName","editedUserSurname","setEditedUserSurname","editedUserDescription","setEditedUserDescription","isVisibleEditWindow","setIsVisibleEditWindow","confirmDelete","setConfirmDelete","handlerDeleteUser","id","deleteUser","editUser","defaultValue","UsersWrapper","UserWrapper","App","loading","useEffect","usersData","useSelector","currentUsers","slice","Math","max","ceil","length","usersPerPage","map","index","key","GlobalStyle","createGlobalStyle","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.59cca3f7.chunk.js","sourcesContent":["import throtle from 'lodash/throttle'\nimport { loadState, saveState } from './localStorage'\nimport { createStore, applyMiddleware } from 'redux'\nimport ReduxThunk from 'redux-thunk'\n\nconst initState = loadState()\nconst users = (users = initState, action) => {\n    switch (action.type) {\n        case 'add':\n            return {\n                users: action.data,\n            }\n        default:\n            return users\n    }\n}\n\nexport const store = createStore(users, applyMiddleware(ReduxThunk))\n\nstore.subscribe(\n    throtle(() => {\n        saveState({ users: store.getState().users })\n    }, 500)\n)\n","export const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('users')\n        if (serializedState === null) {\n            return { users: [] }\n        }\n        return JSON.parse(serializedState)\n    } catch (err) {\n        console.error(err)\n        return {}\n    }\n}\n\nexport const saveState = (users) => {\n    try {\n        const serializedState = JSON.stringify(users)\n        localStorage.setItem('users', serializedState)\n    } catch (err) {\n        // eslint-disable-next-line no-console\n        console.log(err)\n    }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst PaginationBlock = styled.div`\n    display: flex;\n    justify-content: center;\n    div {\n        display: flex;\n        width: 100px;\n        justify-content: space-around;\n        align-items: center;\n    }\n    button {\n        height: 30px;\n        border-radius: 100%;\n        line-height: 14px;\n    }\n`\nexport const Pagination = ({ currentPage, setCurrentPage, PageCount }) => {\n    const nextPage = () => {\n        if (currentPage === PageCount) {\n            return setCurrentPage(1)\n        }\n        return setCurrentPage(currentPage + 1)\n    }\n    const prevPage = () => {\n        if (currentPage === 1) {\n            setCurrentPage(PageCount)\n        } else {\n            setCurrentPage(currentPage - 1)\n        }\n    }\n\n    return (\n        <>\n            {PageCount > 1 && (\n                <PaginationBlock>\n                    <div>\n                        <button onClick={prevPage}> &larr;</button>\n                        <span>\n                            {currentPage}/{PageCount}\n                        </span>\n                        <button onClick={nextPage}> &rarr;</button>\n                    </div>\n                </PaginationBlock>\n            )}\n        </>\n    )\n}\n","const checkResponse = (response) => {\n    if (!response.ok) {\n        throw new Error(`${response.status}: ${response.statusText}`)\n    }\n    return response.json()\n}\n\nconst handleError = (err) => {\n    console.error(err)\n}\n\nexport const getUsers = (setLoading) => (dispatch) => {\n    fetch(\n        `https://cors-anywhere.herokuapp.com/http://77.120.241.80:8911/api/users`\n    )\n        .then(checkResponse)\n        .then((data) =>\n            dispatch({\n                type: 'add',\n                data,\n            })\n        )\n        .catch(handleError)\n        .finally(setLoading(false))\n}\n\nexport const deleteUser = (id, setLoading) => (dispatch) => {\n    setLoading(true)\n    return fetch(\n        `https://cors-anywhere.herokuapp.com/http://77.120.241.80:8911/api/user/${id}`,\n        {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n    )\n        .then(checkResponse)\n        .then(() => {\n            dispatch(getUsers(setLoading))\n        })\n        .catch(handleError)\n}\nexport const editUser = (id, userData, setIsVisibleEditWindow, setLoading) => (\n    dispatch\n) => {\n    setIsVisibleEditWindow(false)\n    setLoading(true)\n    return fetch(\n        `https://cors-anywhere.herokuapp.com/http://77.120.241.80:8911/api/user/${id}`,\n        {\n            method: 'PUT',\n            body: JSON.stringify(userData),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n    )\n        .then(checkResponse)\n        .then(() => {\n            dispatch(getUsers(setLoading))\n        })\n        .catch(handleError)\n}\nexport const createUser = (data, setLoading) => (dispatch) => {\n    setLoading(true)\n    return fetch(\n        `https://cors-anywhere.herokuapp.com/http://77.120.241.80:8911/api/users`,\n        {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n    )\n        .then(checkResponse)\n        .then(() => {\n            dispatch(getUsers(setLoading))\n        })\n        .catch(handleError)\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useDispatch } from 'react-redux'\n\nimport { createUser } from './storage/actions'\n\nexport const FormStyled = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex-grow: 0;\n    justify-content: center;\n    border: 1px solid black;\n    border-radius: 15px;\n    margin: 10px;\n    padding: 10px;\n    background-color: lightgray;\n    input,\n    button {\n        margin: 10px;\n        padding: 5px 10px;\n        font-weight: bold;\n        border-radius: 10px;\n        outline: none;\n    }\n    @media (min-width: 860px) {\n        flex-direction: row;\n    }\n`\nexport const CreateUser = ({ setLoading }) => {\n    const dispatch = useDispatch()\n    const [userName, setUserName] = useState('')\n    const [userSurname, setUserSurname] = useState('')\n    const [userDescription, setUserDescription] = useState('')\n\n    const handleUserNameChange = (e) => {\n        setUserName(e.currentTarget.value)\n    }\n    const handleUserSurname = (e) => {\n        setUserSurname(e.currentTarget.value)\n    }\n    const handleUserDescription = (e) => {\n        setUserDescription(e.currentTarget.value)\n    }\n    const userData = {\n        name: userName,\n        surname: userSurname,\n        desc: userDescription,\n    }\n    const clearInputs = () => {\n        setUserName('')\n        setUserSurname('')\n        setUserDescription('')\n    }\n    const handleCreateUser = (e) => {\n        e.preventDefault()\n        clearInputs()\n        dispatch(createUser(userData, setLoading))\n    }\n\n    return (\n        <FormStyled onSubmit={handleCreateUser}>\n            <h3>Create user</h3>\n            <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"input name\"\n                value={userName}\n                onChange={handleUserNameChange}\n                required\n            />\n            <input\n                type=\"text\"\n                name=\"surname\"\n                placeholder=\"input surname\"\n                value={userSurname}\n                onChange={handleUserSurname}\n                required\n            />\n            <input\n                type=\"text\"\n                name=\"desc\"\n                placeholder=\"input description\"\n                value={userDescription}\n                onChange={handleUserDescription}\n                required\n            />\n            <button type=\"submit\">Create user</button>\n        </FormStyled>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    width: 100vw;\n    min-height: 100vh;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0, 0, 0, 0.85);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const Modal = ({ children, ...props }) => {\n    return <Wrapper {...props}>{children}</Wrapper>\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useDispatch } from 'react-redux'\n\nimport { deleteUser, editUser } from './storage/actions'\nimport { FormStyled } from './CreateUser'\nimport { Modal } from './Modal'\n\nconst ModalStyled = styled(Modal)`\n    span {\n        font-size: 32px;\n        color: white;\n    }\n`\n\nexport const EditUser = ({ user, setLoading }) => {\n    const dispatch = useDispatch()\n    const [editedUserName, setEditedUserName] = useState('')\n    const [editedUserSurname, setEditedUserSurname] = useState('')\n    const [editedUserDescription, setEditedUserDescription] = useState('')\n    const [isVisibleEditWindow, setIsVisibleEditWindow] = useState(false)\n    const [confirmDelete, setConfirmDelete] = useState(false)\n    const handleEditUserNameChange = (e) => {\n        setEditedUserName(e.currentTarget.value)\n    }\n    const handleEditUserSurname = (e) => {\n        setEditedUserSurname(e.currentTarget.value)\n    }\n    const handleEditUserDescription = (e) => {\n        setEditedUserDescription(e.currentTarget.value)\n    }\n    const clearInputs = () => {\n        setEditedUserName('')\n        setEditedUserSurname('')\n        setEditedUserDescription('')\n    }\n    const userData = {\n        name: editedUserName,\n        surname: editedUserSurname,\n        desc: editedUserDescription,\n    }\n    const handlerDeleteUser = () => dispatch(deleteUser(user.id, setLoading))\n\n    const handlerEditUser = (e) => {\n        e.preventDefault()\n        dispatch(\n            editUser(user.id, userData, setIsVisibleEditWindow, setLoading)\n        )\n    }\n\n    return (\n        <>\n            {confirmDelete && (\n                <ModalStyled>\n                    <span>Delete?</span>\n                    <button\n                        onClick={() => {\n                            handlerDeleteUser()\n                            setConfirmDelete(false)\n                        }}\n                    >\n                        Ok\n                    </button>\n                    <button\n                        onClick={() => {\n                            setConfirmDelete(false)\n                        }}\n                    >\n                        No\n                    </button>\n                </ModalStyled>\n            )}\n            {!isVisibleEditWindow && (\n                <>\n                    <button onClick={() => setConfirmDelete(true)}>\n                        Delete user\n                    </button>\n                    <button\n                        onClick={() => {\n                            setEditedUserName(user.name)\n                            setEditedUserSurname(user.surname)\n                            setEditedUserDescription(user.desc)\n                            setIsVisibleEditWindow(true)\n                        }}\n                    >\n                        Edit user\n                    </button>\n                </>\n            )}\n\n            {isVisibleEditWindow && (\n                <Modal>\n                    <FormStyled onSubmit={handlerEditUser}>\n                        <h3>Edit user</h3>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            placeholder=\"input name\"\n                            defaultValue={editedUserName}\n                            onChange={handleEditUserNameChange}\n                            required\n                        />\n                        <input\n                            type=\"text\"\n                            name=\"surname\"\n                            placeholder=\"input surname\"\n                            defaultValue={editedUserSurname}\n                            onChange={handleEditUserSurname}\n                            required\n                        />\n                        <input\n                            type=\"text\"\n                            name=\"desc\"\n                            placeholder=\"input desc\"\n                            defaultValue={editedUserDescription}\n                            onChange={handleEditUserDescription}\n                            required\n                        />\n                        <button type=\"submit\">Edit user</button>\n\n                        <button\n                            type=\"button\"\n                            onClick={() => {\n                                clearInputs()\n                                setIsVisibleEditWindow(false)\n                            }}\n                        >\n                            Cancel edit\n                        </button>\n                    </FormStyled>\n                </Modal>\n            )}\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { Pagination } from './Pagination'\nimport { CreateUser } from './CreateUser'\nimport { EditUser } from './EditUser'\nimport { getUsers } from './storage/actions'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Modal } from './Modal'\n\nconst UsersWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n`\n\nconst UserWrapper = styled.div`\n    border: 1px solid black;\n    border-radius: 15px;\n    margin: 10px;\n    padding: 10px;\n    button,\n    p,\n    > span {\n        margin: 10px;\n        padding: 5px 10px;\n        border-radius: 10px;\n        outline: none;\n    }\n`\n\nconst App = () => {\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        dispatch(getUsers(setLoading))\n    }, [])\n\n    const usersData = useSelector((users) => users.users)\n    const [currentPage, setCurrentPage] = useState(1)\n    const usersPerPage = 5\n\n    const currentUsers = usersData.slice(\n        (currentPage - 1) * usersPerPage,\n        currentPage * usersPerPage\n    )\n\n    const PageCount = Math.max(Math.ceil(usersData.length / usersPerPage), 1)\n\n    if (PageCount < currentPage) {\n        setCurrentPage(PageCount)\n    }\n    return (\n        <>\n            {loading && (\n                <Modal>\n                    <span>Loading...</span>\n                </Modal>\n            )}\n            <CreateUser setLoading={setLoading} />\n            <Pagination\n                currentPage={currentPage}\n                setCurrentPage={setCurrentPage}\n                usersPerPage={usersPerPage}\n                PageCount={PageCount}\n            />\n            <UsersWrapper>\n                {currentUsers &&\n                    currentUsers.map((user, index) => {\n                        return (\n                            <UserWrapper key={index}>\n                                <p>Name: {user.name}</p>\n                                <p>Surname: {user.surname}</p>\n\n                                <p>Description: {user.desc}</p>\n\n                                <EditUser setLoading={setLoading} user={user} />\n                            </UserWrapper>\n                        )\n                    })}\n            </UsersWrapper>\n        </>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './storage/reduser'\nimport { createGlobalStyle } from 'styled-components'\nimport App from './App'\n\nconst GlobalStyle = createGlobalStyle`\n  html,body {\n    margin:0;\n    position: relative;\n  }\n  button{\n      :hover{\n          background-color: lightblue;\n          cursor: pointer;\n          }\n        :focus{\n            border-color: lightcoral;\n            outline:none;\n        }\n  }\n`\n\nReactDOM.render(\n    <React.Fragment>\n        <GlobalStyle />\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.Fragment>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}